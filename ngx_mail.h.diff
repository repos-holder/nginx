$dukzcry$
--- nginx-1.0.11/src/mail/ngx_mail.h	2011-09-23 03:32:23.000000000 +0400
+++ nginx-1.0.11/src/mail/ngx_mail.h.new	2014-02-24 07:58:28.000000000 +0400
@@ -101,6 +101,11 @@ typedef struct {
 typedef struct {
     ngx_array_t             servers;     /* ngx_mail_core_srv_conf_t */
     ngx_array_t             listen;      /* ngx_mail_listen_t */
+#if (NGX_MAIL_SSL)
+    ngx_pool_t		    *ssl_concurrent_pool;
+    ngx_list_t		    *ssl_concurrent_reuse;
+    ngx_event_mutex_t	    ssl_concurrent_lock;
+#endif
 } ngx_mail_core_main_conf_t;
 
 
@@ -108,9 +113,37 @@ typedef struct {
 #define NGX_MAIL_IMAP_PROTOCOL  1
 #define NGX_MAIL_SMTP_PROTOCOL  2
 
+#ifndef NGX_MAIL_HANDLE_GMAIL
+#define NGX_MAIL_HANDLE_GMAIL 1
+#endif
+#ifndef ACCEPT_ADDRTEXT_WITH_PORT
+#define ACCEPT_ADDRTEXT_WITH_PORT 1
+#endif
+#ifndef NGX_MAIL_SSL_REUSE_POOL_SIZE
+#define NGX_MAIL_SSL_REUSE_POOL_SIZE 4096 /* means 6 "keepalivers" cached at same time*/
+#endif
+#ifndef NGX_MAIL_SSL_REUSE_LIST_PART_SIZE
+#define NGX_MAIL_SSL_REUSE_LIST_PART_SIZE 10
+#endif
 
 typedef struct ngx_mail_protocol_s  ngx_mail_protocol_t;
 
+#if (NGX_MAIL_SSL)
+typedef struct {
+    struct {
+	ngx_str_t str;
+	// temporary: move out static-sized containters
+	u_char data[NGX_SOCKADDR_STRLEN];
+    } client_addr_text;
+    struct {
+	ngx_str_t str;
+	u_char data[NGX_SOCKADDR_STRLEN];
+    } server_addr_text;
+    ngx_int_t		    counter;
+    unsigned		    waiting:1;
+    unsigned		    finished:1;
+} ngx_ssl_concurrent_reuse_t;
+#endif
 
 typedef struct {
     ngx_mail_protocol_t    *protocol;
@@ -119,6 +152,9 @@ typedef struct {
     ngx_msec_t              resolver_timeout;
 
     ngx_flag_t              so_keepalive;
+#if (NGX_MAIL_SSL)
+    ngx_flag_t		    ssl_session_reuse;
+#endif
 
     ngx_str_t               server_name;
 
@@ -134,6 +170,11 @@ typedef struct {
 
 typedef enum {
     ngx_pop3_start = 0,
+#if (NGX_MAIL_SSL)
+    //ngx_pop3_noop,
+    ngx_pop3_stls,
+    ngx_pop3_stls_init,
+#endif
     ngx_pop3_user,
     ngx_pop3_passwd,
     ngx_pop3_auth_login_username,
@@ -145,6 +186,10 @@ typedef enum {
 
 typedef enum {
     ngx_imap_start = 0,
+#if (NGX_MAIL_SSL)
+    ngx_imap_stls,
+    ngx_imap_stls_init,
+#endif
     ngx_imap_auth_login_username,
     ngx_imap_auth_login_password,
     ngx_imap_auth_plain,
@@ -157,6 +202,10 @@ typedef enum {
 
 typedef enum {
     ngx_smtp_start = 0,
+#if (NGX_MAIL_SSL)
+    ngx_smtp_stls,
+    ngx_smtp_stls_init,
+#endif
     ngx_smtp_auth_login_username,
     ngx_smtp_auth_login_password,
     ngx_smtp_auth_plain,
@@ -171,6 +220,12 @@ typedef enum {
     ngx_smtp_to
 } ngx_smtp_state_e;
 
+typedef enum {
+    NGX_MAIL_AUTH_PROTO_UNSP = 0,
+    NGX_MAIL_AUTH_PROTO_SSL,
+    NGX_MAIL_AUTH_PROTO_STLS,
+    NGX_MAIL_AUTH_PROTO_SECURE
+} ngx_auth_proto_e;
 
 typedef struct {
     ngx_peer_connection_t   upstream;
@@ -205,6 +260,11 @@ typedef struct {
     unsigned                starttls:1;
     unsigned                esmtp:1;
     unsigned                auth_method:3;
+    ngx_auth_proto_e	    con_proto;
+#if (NGX_MAIL_SSL)
+    unsigned		    junk_flag:1;
+    ngx_ssl_concurrent_reuse_t *ssl_concurrent_cur;
+#endif
     unsigned                auth_wait:1;
 
     ngx_str_t               login;
@@ -299,6 +359,8 @@ typedef struct {
 #define NGX_MAIL_AUTH_CRAM_MD5_ENABLED  0x0010
 #define NGX_MAIL_AUTH_NONE_ENABLED      0x0020
 
+#define NGX_MAIL_SECURE_DIR_IN		0
+#define NGX_MAIL_SECURE_DIR_OUT		1
 
 #define NGX_MAIL_PARSE_INVALID_COMMAND  20
 
@@ -360,6 +422,12 @@ typedef struct {
 #define ngx_mail_conf_get_module_srv_conf(cf, module)                        \
     ((ngx_mail_conf_ctx_t *) cf->ctx)->srv_conf[module.ctx_index]
 
+#define ngx_mail_cycle_get_module_main_conf(cycle, module) \
+    (cycle->conf_ctx[ngx_mail_core_module.index] ? \
+	((ngx_mail_conf_ctx_t *) cycle->conf_ctx[ngx_mail_core_module.index]) \
+	    ->main_conf[module.ctx_index]: \
+	NULL)
+
 
 #if (NGX_MAIL_SSL)
 void ngx_mail_starttls_handler(ngx_event_t *rev);
@@ -396,6 +464,12 @@ char *ngx_mail_capabilities(ngx_conf_t *
 /* STUB */
 void ngx_mail_proxy_init(ngx_mail_session_t *s, ngx_addr_t *peer);
 void ngx_mail_auth_http_init(ngx_mail_session_t *s);
+int ngx_mail_proxy_postinit(ngx_mail_session_t *, ngx_addr_t *, ngx_resolver_ctx_t *);
+void ngx_mail_proxy_start(ngx_connection_t *);
+#if (NGX_MAIL_SSL)
+void ngx_mail_ssl_init_connection(ngx_ssl_t *ssl, ngx_connection_t *c, ngx_int_t);
+void ngx_mail_proxy_internal_server_error(ngx_mail_session_t *);
+#endif
 /**/
 
 

$dukzcry$
--- nginx-1.0.11/src/core/ngx_resolver.c	2011-11-15 23:16:51.000000000 +0400
+++ nginx-1.0.11/src/core/ngx_resolver.c.new	2014-02-24 07:58:30.000000000 +0400
@@ -234,6 +234,7 @@ ngx_resolve_start(ngx_resolver_t *r, ngx
             temp->resolver = r;
             temp->state = NGX_OK;
             temp->naddrs = 1;
+	    temp->is_cached = 0;
             temp->addrs = &temp->addr;
             temp->addr = addr;
             temp->quick = 1;
@@ -380,10 +381,14 @@ ngx_resolve_name_locked(ngx_resolver_t *
     hash = ngx_crc32_short(ctx->name.data, ctx->name.len);
 
     rn = ngx_resolver_lookup_name(r, &ctx->name, hash);
-
+    
     if (rn) {
+	ngx_log_debug0(NGX_LOG_DEBUG_CORE, r->log, 0,
+			"existing resolve host");
 
         if (rn->valid >= ngx_time()) {
+	
+	    ctx->is_cached = 1;
 
             ngx_log_debug0(NGX_LOG_DEBUG_CORE, r->log, 0, "resolve cached");
 
@@ -464,6 +469,8 @@ ngx_resolve_name_locked(ngx_resolver_t *
         }
 
         if (rn->waiting) {
+	    ngx_log_debug0(NGX_LOG_DEBUG_CORE, r->log, 0,
+			    "waiting already running resolving process");
 
             ctx->next = rn->waiting;
             rn->waiting = ctx;
@@ -490,6 +497,8 @@ ngx_resolve_name_locked(ngx_resolver_t *
         /* unlock alloc mutex */
 
     } else {
+	ngx_log_debug0(NGX_LOG_DEBUG_CORE, r->log, 0,
+			"new resolve host");
 
         rn = ngx_resolver_alloc(r, sizeof(ngx_resolver_node_t));
         if (rn == NULL) {
@@ -597,6 +606,8 @@ ngx_resolve_addr(ngx_resolver_ctx_t *ctx
     if (rn) {
 
         if (rn->valid >= ngx_time()) {
+	
+	    ctx->is_cached = 1;
 
             ngx_log_debug0(NGX_LOG_DEBUG_CORE, r->log, 0, "resolve cached");
 
